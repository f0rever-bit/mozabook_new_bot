# –ì–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫—É Telegram-–±–æ—Ç–∞ –Ω–∞ aiogram
# –ù–∞–ª–∞—à—Ç–æ–≤—É—î –ª–æ–≥—É–≤–∞–Ω–Ω—è, –ø—ñ–¥–∫–ª—é—á–∞—î —Ä–æ—É—Ç–µ—Ä–∏, —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –ø—Ä–æ–≥—Ä–µ—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤

import logging
logging.basicConfig(
    level=logging.INFO,
    format="%(levelname)s:%(name)s:%(message)s"
)

from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import BotCommand
import asyncio
import os

from dotenv import load_dotenv

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –≤—Å—ñ —Ö–µ–Ω–¥–ª–µ—Ä–∏ —Ç–∞ –º–æ–¥—É–ª—å –ø—Ä–æ–≥—Ä–µ—Å—É
from handlers import start, training, faq, testing
from data import progress

load_dotenv()

print("üîë API KEY:", os.getenv("OPENROUTER_API_KEY"))  # –î–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∫–ª—é—á–∞ API

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∑ .env

async def main():
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
    dp = Dispatcher(storage=MemoryStorage())

    # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –≤—Å—ñ —Ä–æ—É—Ç–µ—Ä–∏ (–æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥)
    dp.include_router(start.router)
    dp.include_router(training.router)
    dp.include_router(faq.router)
    dp.include_router(testing.router)

    # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ —Ñ–∞–π–ª—É
    progress.load_progress()

    # –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä–∏–π webhook —Ç–∞ –∑–∞–ø—É—Å–∫–∞—î–º–æ polling
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
